{
    "docs": [
        {
            "location": "/",
            "text": "Projet : Librairie tekgui\n\n\n \n \n\nL'objectif de la librairie tekgui est de vous faciliter l'utilisation de la librairie Lapin.\n\nPour cela, plusieurs fonction sont \u00e0 votre disposition pour cr\u00e9er et personnaliser votre interface.\n\nPour utiliser ses fonctions, il est n\u00e9cessaire d'inclure la librairie tekgui dans votre Projet.\n\n\nCette librairie est disponible en \nfran\u00e7ais\n or in\n\nenglish\n\n\n\n\nInformations\n\n\n\nLa librairie et la documentation a \u00e9t\u00e9 cr\u00e9\u00e9 et r\u00e9dig\u00e9 par Martin Alais.\n\nPour toute question, \nmartin.alais@epitech.eu\n\nFait en f\u00e9vrier 2016 \u00e0 Lyon.",
            "title": "Home"
        },
        {
            "location": "/#projet-librairie-tekgui",
            "text": "L'objectif de la librairie tekgui est de vous faciliter l'utilisation de la librairie Lapin. \nPour cela, plusieurs fonction sont \u00e0 votre disposition pour cr\u00e9er et personnaliser votre interface. \nPour utiliser ses fonctions, il est n\u00e9cessaire d'inclure la librairie tekgui dans votre Projet. \nCette librairie est disponible en  fran\u00e7ais  or in english",
            "title": "Projet : Librairie tekgui"
        },
        {
            "location": "/#informations",
            "text": "La librairie et la documentation a \u00e9t\u00e9 cr\u00e9\u00e9 et r\u00e9dig\u00e9 par Martin Alais. \nPour toute question,  martin.alais@epitech.eu \nFait en f\u00e9vrier 2016 \u00e0 Lyon.",
            "title": "Informations"
        },
        {
            "location": "/doc-fr/",
            "text": "Utilisation de la librairie tekgui\n\n\n\nCe guide est fait pour les utilisateurs qui connaissent les bases de la Liblapin, et qui ma\u00eetrisent les fonctions :\n\n\nbunny_set_key_response();\nbunny_set_loop_main_function();\nbunny_loop();\n\n\n\n\n\n\nCr\u00e9ation d'un fichier ini\n\n\n\nLa librairie tekgui se base sur un fichier ini pour cr\u00e9er une interface graphique personalis\u00e9e.\n\nIl est donc n\u00e9cessaire de cr\u00e9er un fichier ini correctement.\n\nCertaine partie sont obligatoires, d'autre sont personalisables.\nLe fichier ini doit \u00eatre configur\u00e9 comme dans l'exemple ci-dessous.\n\nDans le cas contraire, les fonctions de la librairie tekgui vont renvoyer une erreur.\n\n\n\nExemple :\n\n\n[info]\nname=\nwindow\n\nheight=800\nwidth=800\ncolor=200,200,200\nmax_ram=15\n\n\n\n\n\nLe champ \n[info]\n est \nobligatoire\n.\n\nLe champ \nwindow\n contient le nom de la fen\u00eatre cr\u00e9\u00e9e par la librairie.\n\nLes champs \nheight\n et \nwidth\n contiennent la longueur et la largeur de la fenetre.\n\nLe champ \ncolor\n contient la couleur de la fenetre.\n\nLe champ \nmax_ram\n contient le maximum de ram utilisable par la programme.\n\nSi l'erreur \nError: error in malloc\n apparait, c'est probablement que max_ram est trop petit pour supporter la librairie Tekgui.\n\nSi window, color, height ou width n'est pas compl\u00e9t\u00e9 ou existant, les fonctions retourneront une erreur.\n\n\n\n\nInitialisation du fichier ini\n\n\n\nLa suite du fichier ini contient les informations principales de la fen\u00eatre.\n\n\nExemple :\n\n\n[window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=2\nname_checkbox=checkbox1,checkbox2\nnbr_picbox=2\nname_picbox=picbox1,picbox2\n\n\n\n\n\nLe champ \n[window]\n est obligatoire.\n\nLe champ \nnbr_button\n est le nombre de bouton pr\u00e9sent dans la fen\u00e8tre.\n\nLe champ \nname_button\n contient les nom des boutons. Le nombre de nom et \nnbr_button\n doivent etre les m\u00eame.\n\nLe champ \nnbr_textbox\n est le nombre de case de text pr\u00e9sent dans la fen\u00eatre.\n\nLe champ \nname_textbox\n contient les noms des cases de text. Le nombre de nom et \nnbr_textbox doivent\n etre les m\u00eame.\n\nLe champ \nnbr_checkbox\n est le nombre de checkbox pr\u00e9sent dans la fen\u00eatre.\n\nLe champ \nname_checkbox\n contient les noms des cases de text. Le nombre de nom et \nnbr_checkbox\n doivent etre les m\u00eame.\n\nLe champ \nnbr_picbox\n est le nombre d'image pr\u00e9sent dans la fen\u00eatre.\n\nLe champ \nname_picbox\n contient les noms des images. Le nombre de nom et \nnbr_picbox\n doivent etre les m\u00eame.\n\n\nATTENTION\n Tous les champ doivent apparaitre dans le fichier ini.\n\nSi, par exemple, vous ne voulez pas de checkbox, voici comment faire :\n\n\n[window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=0\nname_checkbox=NULL\nnbr_picbox=2\nname_picbox=picbox1,picbox2\n\n\n\n\n\n\n\nConfiguration des boutons\n\n\n\nApres avoir \u00e9t\u00e9 initialis\u00e9, chaque bouton doit \u00eatre defini comme dans l'exemple ci-dessous.\n\n\nExemple :\n\n\n[button1]\nname=\nsalut\n\nposx=0\nposy=0\nheight=100\nwidth=100\ncolor=70,70,70\nselect_color=150,150,150\nfct_to_call=\nbutton1\n\n\n\n\n\n\nLe champ \n[button1]\n contient le nom du bouton que vous voulez definir, entour\u00e9e de [ ].\n\nLe champ \nname\n contient le nom du bouton dans la fen\u00eatre.\n\nLes champ \nposx\n et \nposy\n contiennent la position de d\u00e9part du bouton.\n\nLes champ \nheight\n et \nwight\n d\u00e9finissent la taille du bouton.\n\nLe champ \ncolor\n est la couleur du boutton.\n\nLe champ \nselect_color\n est la couleur lorsque le bouton est selectionn\u00e9.\n\nLe champ \nfct_to_call\n contient le nom de la fonction appeller lorsque le bouton est cliquer.\n\nChaque bouton doit avoir sa propre configuration.\n\nSi il y a deux configurations diff\u00e9rentes pour le m\u00eame bouton, la premi\u00e8re configuration trouv\u00e9 sera activ\u00e9e, la seconde sera ignor\u00e9e.\n\n\n\n\nConfiguration des bo\u00eetes de texte\n\n\n\nApres avoir \u00e9t\u00e9 initialis\u00e9, chaque bo\u00eete de texte doit \u00eatre d\u00e9finie comme dans l'exemple ci-dessous.\n\n\nExemple :\n\n\n[textbox1]\nname=\ntekbox1\n\nposx=300\nposy=100\nheight=100\nwidth=300\ncolor=80,80,80\ntext=\nbonjour\n\n\n\n\n\n\nLe champ \n[textbox1]\n contient le nom de la boite que vous voulez definir, entour\u00e9e de [ ].\n\nLe champ \nname\n contient le nom de la textbox dans la fen\u00eatre.\n\nLes champ \nposx\n et \nposy\n contiennent la position de d\u00e9part de la textbox.\n\nLes champ \nheight\n et \nwight\n d\u00e9finissent la taille de la boite.\n\nLe champ \ncolor\n contient la couleur de la textbox.\n\nLe champ \ntext\n contient l'\u00e9criture initial \u00e0 l'int\u00e9rieur de la boite.\n\n\n\nChaque boite de texte doit avoir sa propre d\u00e9finition.\n\nSi il y a deux configurations diff\u00e9rentes pour la m\u00eame boite, la premi\u00e8re configuration trouv\u00e9 sera activ\u00e9e, la seconde sera ignor\u00e9e.\n\nPour utiliser la boite de texte, il suffit de cliquer dessus.\n\nSeul les caract\u00e8res alphab\u00e9tiques, les espaces et la touche retour arri\u00e8re peuvent \u00eatre utilis\u00e9 dans ses bo\u00eetes\n\nLes autres carract\u00e8res n'auront uncun effet.\n\n\n\n\n\n\nConfiguration des Checkbox\n\n\n\nApres avoir \u00e9t\u00e9 initialis\u00e9, chaque checkbox doit \u00eatre d\u00e9finie comme dans l'exemple ci-dessous.\n\n\nExemple :\n\n\n[checkbox1]\nname=\ncheckbox1\n\nposx=700\nposy=70\nheight=50\nwidth=50\nfct_to_call_check=\ncheck\n\nfct_to_call_not_check=\nnot_check\n\n\n\n\n\n\n\nLe champ \n[textbox1]\n contient le nom de la checkbox que vous voulez d\u00e9finir, entour\u00e9e de [ ].\n\nLe champ \nname\n contient le nom de la checkbox dans la fen\u00eatre.\n\nLes champ \nposx\n et \nposy\n contiennent la position de d\u00e9part de la checkbox.\n\nLes champ \nheight\n et \nwight\n d\u00e9finissent la taille de la checkbox.\n\nLe champ \nfct_to_call_check\n contient le nom de la fonction \u00e0 appller lorsque la case est coch\u00e9e\n\nle chemp \nfct_to_call_not_check\n contient le nom de la fonction \u00e0 appeller lorque la case n'est pas coch\u00e9e\n\n\n\nChaque checkbox doit avoir sa propre d\u00e9finition.\n\nSi il y a deux configurations diff\u00e9rentes pour la m\u00eame checkbox, la premi\u00e8re configuration trouv\u00e9 sera activ\u00e9e, la seconde sera ignor\u00e9e.\n\nIl suffit de cliquer sur la checkbox pour changer sont etat.\n\n\n\n\n\n\nConfiguration des picbox\n\n\n\nApres avoir \u00e9t\u00e9 initialis\u00e9, chaque picbox doit \u00eatre defini comme dans l'exemple ci-dessous.\n\nLe picbox veut dire Picture box, ou \"boite d'image\"\n\n\nExemple :\n\n\n[picbox1]\nname=\nemoji6.png\n\nposx=100\nposy=250\n\n\n\n\n\nLe champ \n[picbox1]\n contient le nom de la picbox que vous voulez definir, entourer de [ ].\n\nLe champ \nname\n contient le lien de l'image a charger.\n\nLes champ \nposx\n et \nposy\n contiennent la position de d\u00e9part de la checkbox.\n\n\n\nChaque picbox doit avoir sa propre definition.\n\nSi il y a deux configurations diff\u00e9rentes pour la meme picbox, la premi\u00e8re configuration trouv\u00e9 sera activ\u00e9e, la seconde sera ignor\u00e9e.\n\nL'image sera affich\u00e9 \u00e0 partir des coordonn\u00e9es donn\u00e9, jusqu'a sa fin.\n\nSi la fin de l'image se trouve apr\u00e8s la fin de la fen\u00e8tre, une erreur apparaitra dans la terminal.\n\n\nname\n doit contenir un lien direct ou le chemin d'acc\u00e9s \u00e0 votre image \u00e0 partir de la racine de la librairie.\n\nSi l'image donn\u00e9e n'existe pas ou que le lien est mal ent\u00e9e, la fonction retournera une erreur.\n\n\n\n\n\n\nAide\n\n\nPour tester ses fonctions, vous pouver vous servir du fichier ini donner \nici\n\nPour tester la librairie avec le fichier ini, il vous faudra un programme.\n\nUn code basique vous est donn\u00e9 \nici\n\n\n\n\nLes fonctions de la librairie\n\n\nToutes les fonctions pr\u00e9sente dans la librairie  sont dans l'onglet  \nfonction\n\n\nSi vous chercher une fonction sp\u00e9cifique, vous pourver cliquer qur les lien suivant:\n\n\n\n\n\n1. \ntekgui_load\n\n2. \ntekgui_display\n\n3. \ndisplay_window\n\n4. \ntekpixel\n\n5. \ntekfunction\n\n6. \ntektext\n\n7. \ntekgetpixel\n\n8. \ntekgui_stop\n\n9. \ntekgui_max_ram",
            "title": "Doc"
        },
        {
            "location": "/doc-fr/#utilisation-de-la-librairie-tekgui",
            "text": "Ce guide est fait pour les utilisateurs qui connaissent les bases de la Liblapin, et qui ma\u00eetrisent les fonctions :  bunny_set_key_response();\nbunny_set_loop_main_function();\nbunny_loop();",
            "title": "Utilisation de la librairie tekgui"
        },
        {
            "location": "/doc-fr/#creation-dun-fichier-ini",
            "text": "La librairie tekgui se base sur un fichier ini pour cr\u00e9er une interface graphique personalis\u00e9e. \nIl est donc n\u00e9cessaire de cr\u00e9er un fichier ini correctement. \nCertaine partie sont obligatoires, d'autre sont personalisables.\nLe fichier ini doit \u00eatre configur\u00e9 comme dans l'exemple ci-dessous. \nDans le cas contraire, les fonctions de la librairie tekgui vont renvoyer une erreur.  \nExemple :  [info]\nname= window \nheight=800\nwidth=800\ncolor=200,200,200\nmax_ram=15  \nLe champ  [info]  est  obligatoire . \nLe champ  window  contient le nom de la fen\u00eatre cr\u00e9\u00e9e par la librairie. \nLes champs  height  et  width  contiennent la longueur et la largeur de la fenetre. \nLe champ  color  contient la couleur de la fenetre. \nLe champ  max_ram  contient le maximum de ram utilisable par la programme. \nSi l'erreur  Error: error in malloc  apparait, c'est probablement que max_ram est trop petit pour supporter la librairie Tekgui. \nSi window, color, height ou width n'est pas compl\u00e9t\u00e9 ou existant, les fonctions retourneront une erreur.",
            "title": "Cr\u00e9ation d'un fichier ini"
        },
        {
            "location": "/doc-fr/#initialisation-du-fichier-ini",
            "text": "La suite du fichier ini contient les informations principales de la fen\u00eatre. \nExemple :  [window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=2\nname_checkbox=checkbox1,checkbox2\nnbr_picbox=2\nname_picbox=picbox1,picbox2  \nLe champ  [window]  est obligatoire. \nLe champ  nbr_button  est le nombre de bouton pr\u00e9sent dans la fen\u00e8tre. \nLe champ  name_button  contient les nom des boutons. Le nombre de nom et  nbr_button  doivent etre les m\u00eame. \nLe champ  nbr_textbox  est le nombre de case de text pr\u00e9sent dans la fen\u00eatre. \nLe champ  name_textbox  contient les noms des cases de text. Le nombre de nom et  nbr_textbox doivent  etre les m\u00eame. \nLe champ  nbr_checkbox  est le nombre de checkbox pr\u00e9sent dans la fen\u00eatre. \nLe champ  name_checkbox  contient les noms des cases de text. Le nombre de nom et  nbr_checkbox  doivent etre les m\u00eame. \nLe champ  nbr_picbox  est le nombre d'image pr\u00e9sent dans la fen\u00eatre. \nLe champ  name_picbox  contient les noms des images. Le nombre de nom et  nbr_picbox  doivent etre les m\u00eame.  ATTENTION  Tous les champ doivent apparaitre dans le fichier ini. \nSi, par exemple, vous ne voulez pas de checkbox, voici comment faire :  [window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=0\nname_checkbox=NULL\nnbr_picbox=2\nname_picbox=picbox1,picbox2",
            "title": "Initialisation du fichier ini"
        },
        {
            "location": "/doc-fr/#configuration-des-boutons",
            "text": "Apres avoir \u00e9t\u00e9 initialis\u00e9, chaque bouton doit \u00eatre defini comme dans l'exemple ci-dessous. \nExemple :  [button1]\nname= salut \nposx=0\nposy=0\nheight=100\nwidth=100\ncolor=70,70,70\nselect_color=150,150,150\nfct_to_call= button1   \nLe champ  [button1]  contient le nom du bouton que vous voulez definir, entour\u00e9e de [ ]. \nLe champ  name  contient le nom du bouton dans la fen\u00eatre. \nLes champ  posx  et  posy  contiennent la position de d\u00e9part du bouton. \nLes champ  height  et  wight  d\u00e9finissent la taille du bouton. \nLe champ  color  est la couleur du boutton. \nLe champ  select_color  est la couleur lorsque le bouton est selectionn\u00e9. \nLe champ  fct_to_call  contient le nom de la fonction appeller lorsque le bouton est cliquer. \nChaque bouton doit avoir sa propre configuration. \nSi il y a deux configurations diff\u00e9rentes pour le m\u00eame bouton, la premi\u00e8re configuration trouv\u00e9 sera activ\u00e9e, la seconde sera ignor\u00e9e.",
            "title": "Configuration des boutons"
        },
        {
            "location": "/doc-fr/#configuration-des-boites-de-texte",
            "text": "Apres avoir \u00e9t\u00e9 initialis\u00e9, chaque bo\u00eete de texte doit \u00eatre d\u00e9finie comme dans l'exemple ci-dessous. \nExemple :  [textbox1]\nname= tekbox1 \nposx=300\nposy=100\nheight=100\nwidth=300\ncolor=80,80,80\ntext= bonjour   \nLe champ  [textbox1]  contient le nom de la boite que vous voulez definir, entour\u00e9e de [ ]. \nLe champ  name  contient le nom de la textbox dans la fen\u00eatre. \nLes champ  posx  et  posy  contiennent la position de d\u00e9part de la textbox. \nLes champ  height  et  wight  d\u00e9finissent la taille de la boite. \nLe champ  color  contient la couleur de la textbox. \nLe champ  text  contient l'\u00e9criture initial \u00e0 l'int\u00e9rieur de la boite.  \nChaque boite de texte doit avoir sa propre d\u00e9finition. \nSi il y a deux configurations diff\u00e9rentes pour la m\u00eame boite, la premi\u00e8re configuration trouv\u00e9 sera activ\u00e9e, la seconde sera ignor\u00e9e. \nPour utiliser la boite de texte, il suffit de cliquer dessus. \nSeul les caract\u00e8res alphab\u00e9tiques, les espaces et la touche retour arri\u00e8re peuvent \u00eatre utilis\u00e9 dans ses bo\u00eetes \nLes autres carract\u00e8res n'auront uncun effet.",
            "title": "Configuration des bo\u00eetes de texte"
        },
        {
            "location": "/doc-fr/#configuration-des-checkbox",
            "text": "Apres avoir \u00e9t\u00e9 initialis\u00e9, chaque checkbox doit \u00eatre d\u00e9finie comme dans l'exemple ci-dessous. \nExemple :  [checkbox1]\nname= checkbox1 \nposx=700\nposy=70\nheight=50\nwidth=50\nfct_to_call_check= check \nfct_to_call_not_check= not_check   \nLe champ  [textbox1]  contient le nom de la checkbox que vous voulez d\u00e9finir, entour\u00e9e de [ ]. \nLe champ  name  contient le nom de la checkbox dans la fen\u00eatre. \nLes champ  posx  et  posy  contiennent la position de d\u00e9part de la checkbox. \nLes champ  height  et  wight  d\u00e9finissent la taille de la checkbox. \nLe champ  fct_to_call_check  contient le nom de la fonction \u00e0 appller lorsque la case est coch\u00e9e \nle chemp  fct_to_call_not_check  contient le nom de la fonction \u00e0 appeller lorque la case n'est pas coch\u00e9e  \nChaque checkbox doit avoir sa propre d\u00e9finition. \nSi il y a deux configurations diff\u00e9rentes pour la m\u00eame checkbox, la premi\u00e8re configuration trouv\u00e9 sera activ\u00e9e, la seconde sera ignor\u00e9e. \nIl suffit de cliquer sur la checkbox pour changer sont etat.",
            "title": "Configuration des Checkbox"
        },
        {
            "location": "/doc-fr/#configuration-des-picbox",
            "text": "Apres avoir \u00e9t\u00e9 initialis\u00e9, chaque picbox doit \u00eatre defini comme dans l'exemple ci-dessous. \nLe picbox veut dire Picture box, ou \"boite d'image\" \nExemple :  [picbox1]\nname= emoji6.png \nposx=100\nposy=250  \nLe champ  [picbox1]  contient le nom de la picbox que vous voulez definir, entourer de [ ]. \nLe champ  name  contient le lien de l'image a charger. \nLes champ  posx  et  posy  contiennent la position de d\u00e9part de la checkbox.  \nChaque picbox doit avoir sa propre definition. \nSi il y a deux configurations diff\u00e9rentes pour la meme picbox, la premi\u00e8re configuration trouv\u00e9 sera activ\u00e9e, la seconde sera ignor\u00e9e. \nL'image sera affich\u00e9 \u00e0 partir des coordonn\u00e9es donn\u00e9, jusqu'a sa fin. \nSi la fin de l'image se trouve apr\u00e8s la fin de la fen\u00e8tre, une erreur apparaitra dans la terminal.  name  doit contenir un lien direct ou le chemin d'acc\u00e9s \u00e0 votre image \u00e0 partir de la racine de la librairie. \nSi l'image donn\u00e9e n'existe pas ou que le lien est mal ent\u00e9e, la fonction retournera une erreur.",
            "title": "Configuration des picbox"
        },
        {
            "location": "/doc-fr/#aide",
            "text": "Pour tester ses fonctions, vous pouver vous servir du fichier ini donner  ici \nPour tester la librairie avec le fichier ini, il vous faudra un programme. \nUn code basique vous est donn\u00e9  ici",
            "title": "Aide"
        },
        {
            "location": "/doc-fr/#les-fonctions-de-la-librairie",
            "text": "Toutes les fonctions pr\u00e9sente dans la librairie  sont dans l'onglet   fonction  Si vous chercher une fonction sp\u00e9cifique, vous pourver cliquer qur les lien suivant:   \n1.  tekgui_load \n2.  tekgui_display \n3.  display_window \n4.  tekpixel \n5.  tekfunction \n6.  tektext \n7.  tekgetpixel \n8.  tekgui_stop \n9.  tekgui_max_ram",
            "title": "Les fonctions de la librairie"
        },
        {
            "location": "/fonction-fr/",
            "text": "Fonction de la librairie\n\n\n\n\ntekpixel\n\n\n\nLa fonction tekpixel modifie la couleur d'un pixel a une position donn\u00e9.\n\nElle est def\u00e9nit comme suit:\n\n\nvoid      tekpixel(t_bunny_pixelarray *pix, t_bunny_position *pos, t_color *color);\n\n\n\n\nLa fonction tekpixel peut changer la couler uniquement de la taille du pixelarray.\n\nSi la position donn\u00e9 est fausse, la fonction ne changera rien.\n\n\n\n\n\n\ntekgui_load\n\n\n\nLa fonction tekgui_load lit les informations pr\u00e9sente dans le fichier ini et remplit la structre getgui.\nIl faut appeller cette fonction avant toute autre fonction utilisant la structure tekgui.\ntekgui_load est definit comme si-dessous\n\n\n\nt_tekgui     tekgui_load(const char *filename);\n\n\n\n\n\nEn cas d'erreur, la fonction tekgui_load retourne NULL et un message s'affichera sur la sorit d'erreur.\n\n\n\n\ntekgui_display\n\n\n\nLa fonction tekgui_display ecrit toutes les donn\u00e9es contenue dans la structure t_tekgui dans un pixelarray.\n\n\nATTENTION\n : tekgui_display ne g\u00e8re pas l'affichage, elle se contente de \"remplir\" le pixelarray\n\nPour afficher la window, il faut utiliser la fonction \ndisplay_window\n \n\ntekgui_display est d\u00e9finit comme si-dessous\n\n\nvoid       tekgui_display(t_bunny_pixelarray *pix, t_tekgui *tekgui);\n\n\n\n\n\nPour plus de simplicit\u00e9, il est recommand\u00e9 d'utiliser la fonction comme suit:\n\n\ntekgui_display(tekgui-\npix, tekgui);\n\n\n\n\n\n\ndisplay_window\n\n\n\nLa fonction display_window affiche la fen\u00eatre avec toutes la structure.\n\n\nvoid      display_window(t_tekgui *tekgui);\n\n\n\n\n\nCette fonction affiche l'image, mais ne la remplit pas le pixelarray.\n\nPour remplir l'amage, il faut utiliser \ntekgui_display\n\n\n\n\ntekfunction\n\n\n\nLa fonction tekfunction prend en parametre le nom d'une fonction et renvoi l'adresse de cette fonction.\n\nElle est definit comme suit:\n\n\nvoid      *tekfunction(const char *functname);\n\n\n\n\n\nSi la fonction n'existe pas ou qu'une erreur c'est produite, tekfunction va renvoyer NULL.\n\n\n\n\ntektext\n\n\n\nCette fonction afficher du text en Haut a gauche du pixelarray.\n\nElle prend en parametre le pixelarray de destinaltion, une chaine de carract\u00e8re a copier, et un pixelarray contenant les caract\u00e8res\n\nElle est definit comme suit:\n\n\nvoid tektext(t_bunny_pixelarray *out, const char *str, t_bunny_pixelarray *font_png);\n\n\n\n\n\n\ntekgetpixel\n\n\n\nLa fonction tekgetpixel prend en parametre la position d'un pixel et renvoi sa couleur.\n\nElle est definit comme suit :\n\n\nt_color      tekgetpixel(t_bunny_pixelarray *, t_bunny_position *);\n\n\n\n\n\n\ntekgui_stop\n\n\n\nLa fonction tekgui_stop lib\u00e8re la memmoire accuper par la librairie.\n\nElle doit abligatoirement etre appel\u00e9.\n\n\nvoid      tekgui_stop(t_tekgui *);\n\n\n\n\n\n\ntekgui_max_ram\n\n\n\nLa fonction tekgui_max_ram prend en parametre le fichier ini qui correspond au projet.\n\nElle est definit comme suit :\n\n\nvoid    tekgui_max_ram(const char *name);\n\n\n\n\nElle d\u00e9finit le maximum de ram qui peut etre utiliser par le programme.\n\nIl faut l'appeler au debut du programme, avant \ntekgui_load",
            "title": "Fonction"
        },
        {
            "location": "/fonction-fr/#fonction-de-la-librairie",
            "text": "",
            "title": "Fonction de la librairie"
        },
        {
            "location": "/fonction-fr/#tekpixel",
            "text": "La fonction tekpixel modifie la couleur d'un pixel a une position donn\u00e9. \nElle est def\u00e9nit comme suit:  void      tekpixel(t_bunny_pixelarray *pix, t_bunny_position *pos, t_color *color);  La fonction tekpixel peut changer la couler uniquement de la taille du pixelarray. \nSi la position donn\u00e9 est fausse, la fonction ne changera rien.",
            "title": "tekpixel"
        },
        {
            "location": "/fonction-fr/#tekgui_load",
            "text": "La fonction tekgui_load lit les informations pr\u00e9sente dans le fichier ini et remplit la structre getgui.\nIl faut appeller cette fonction avant toute autre fonction utilisant la structure tekgui.\ntekgui_load est definit comme si-dessous  t_tekgui     tekgui_load(const char *filename);  \nEn cas d'erreur, la fonction tekgui_load retourne NULL et un message s'affichera sur la sorit d'erreur.",
            "title": "tekgui_load"
        },
        {
            "location": "/fonction-fr/#tekgui_display",
            "text": "La fonction tekgui_display ecrit toutes les donn\u00e9es contenue dans la structure t_tekgui dans un pixelarray.  ATTENTION  : tekgui_display ne g\u00e8re pas l'affichage, elle se contente de \"remplir\" le pixelarray \nPour afficher la window, il faut utiliser la fonction  display_window   \ntekgui_display est d\u00e9finit comme si-dessous  void       tekgui_display(t_bunny_pixelarray *pix, t_tekgui *tekgui);  \nPour plus de simplicit\u00e9, il est recommand\u00e9 d'utiliser la fonction comme suit:  tekgui_display(tekgui- pix, tekgui);",
            "title": "tekgui_display"
        },
        {
            "location": "/fonction-fr/#display_window",
            "text": "La fonction display_window affiche la fen\u00eatre avec toutes la structure.  void      display_window(t_tekgui *tekgui);  \nCette fonction affiche l'image, mais ne la remplit pas le pixelarray. \nPour remplir l'amage, il faut utiliser  tekgui_display",
            "title": "display_window"
        },
        {
            "location": "/fonction-fr/#tekfunction",
            "text": "La fonction tekfunction prend en parametre le nom d'une fonction et renvoi l'adresse de cette fonction. \nElle est definit comme suit:  void      *tekfunction(const char *functname);  \nSi la fonction n'existe pas ou qu'une erreur c'est produite, tekfunction va renvoyer NULL.",
            "title": "tekfunction"
        },
        {
            "location": "/fonction-fr/#tektext",
            "text": "Cette fonction afficher du text en Haut a gauche du pixelarray. \nElle prend en parametre le pixelarray de destinaltion, une chaine de carract\u00e8re a copier, et un pixelarray contenant les caract\u00e8res \nElle est definit comme suit:  void tektext(t_bunny_pixelarray *out, const char *str, t_bunny_pixelarray *font_png);",
            "title": "tektext"
        },
        {
            "location": "/fonction-fr/#tekgetpixel",
            "text": "La fonction tekgetpixel prend en parametre la position d'un pixel et renvoi sa couleur. \nElle est definit comme suit :  t_color      tekgetpixel(t_bunny_pixelarray *, t_bunny_position *);",
            "title": "tekgetpixel"
        },
        {
            "location": "/fonction-fr/#tekgui_stop",
            "text": "La fonction tekgui_stop lib\u00e8re la memmoire accuper par la librairie. \nElle doit abligatoirement etre appel\u00e9.  void      tekgui_stop(t_tekgui *);",
            "title": "tekgui_stop"
        },
        {
            "location": "/fonction-fr/#tekgui_max_ram",
            "text": "La fonction tekgui_max_ram prend en parametre le fichier ini qui correspond au projet. \nElle est definit comme suit :  void    tekgui_max_ram(const char *name);  Elle d\u00e9finit le maximum de ram qui peut etre utiliser par le programme. \nIl faut l'appeler au debut du programme, avant  tekgui_load",
            "title": "tekgui_max_ram"
        },
        {
            "location": "/doc-en/",
            "text": "Utilisation de la librairie tekgui\n\n\n\nThis manual is made for user who know how to use the following function :\n\n\nbunny_set_key_response();\nbunny_set_loop_main_function();\nbunny_loop();\n\n\n\n\n\n\nEstablishment of an ini file\n\n\n\nThe tekgui library need a ini file to work.\n\nThis is necessary to create a good one.\n\nSome part of the ini file are mandatory, some other are customizable.\n\nThe ini file must be set like the following example.\n\nIf not, some function of the library will return NULL and print an Error.\n\n\n\nExample :\n\n\n[info]\nname=\nwindow\n\nheight=800\nwidth=800\ncolor=200,200,200\nmax_ram=15\n\n\n\n\n\nThe domain \n[info]\n is a mandatory field.\n\nThe domain \nwindow\n contain the name of the window made by the library.\n\nThe domain \nheight\n and \nwidth\n contains the height and the width of the window.\n\nThe domain \ncolor\n contain the color of the window.\n\nThe domain \nmax_ram\n contain the maximum of ram usable by the program.\n\nIf you see \nError: error in malloc\n print on the terminal, it's probably because \nmax_ram\n is too short.\n\nIf window, color, height or width is empty or miss, the function will return an error.\n\n\n\n\nInitialization of the ini file\n\n\n\nThis part is used to load the ini informations and set the tekgui structure.\n\n\nExample :\n\n\n[window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=2\nname_checkbox=checkbox1,checkbox2\nnbr_picbox=2\nname_picbox=picbox1,picbox2\n\n\n\n\n\nThe domain \n[window]\n is a mandatory field.\n\nThe domain \nnbr_button\n is the number of button in the window.\n\nThe domain \nname_button\n contain the name of all buttons. The number of name and \nnbr_button\n must match.\n\nThe domain \nnbr_textbox\n is the number of textbox in the window.\n\nThe domain \nname_textbox\n contain the name of all textbox. The number of name and \nnbr_text\n must match.\n\nThe domain \nnbr_checkbox\n is the number of checkbox in the window.\n\nThe domain \nname_checkbox\n contain the name of all checkbox. The number if name and \nnbr_checkbox\n must match.\n\nThe domain \nnbr_picbox\n is the number of picbox in the window.\n\nThe domain \nname_picbox\n contain rhe name of all picbox. The number if name and \nnbr_checkbox\n must match.\n\n\nWARNING\n All the domain must be set.\n\nIf, for example, you don't want checkbox in you interface, you should do :\n\n\n[window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=0\nname_checkbox=NULL\nnbr_picbox=2\nname_picbox=picbox1,picbox2\n\n\n\n\n\n\n\nButton setup\n\n\n\nEach button must be define as below :\n\n\nExample :\n\n\n[button1]\nname=\nsalut\n\nposx=0\nposy=0\nheight=100\nwidth=100\ncolor=70,70,70\nselect_color=150,150,150\nfct_to_call=\nbutton1\n\n\n\n\n\n\nThe domain \n[button1]\n contain the name of the name of the button to set, surrounded by [ ].\n\nThe domain \nname\n contain the name of button in the window.\n\nThe domain \nposx\n and \nposy\n contains the starting position of the button.\n\nThe domain \nheight\n and \nwight\n define the size of the button.\n\nThe domain \ncolor\n contain the color of the button.\n\nThe domain \nselect_color\n is the color when the mousse is on the button.\n\nThe domain \nfct_to_call\n contain the name of the function to call when you clock on the button.\n\nEach button must have is own setup.\n\nIf there is two different setup for the same button, the program will use only the first one.\n\n\n\n\nTextbox setup\n\n\n\nEach textbox must be define as below :\n\n\nExample :\n\n\n[textbox1]\nname=\ntekbox1\n\nposx=300\nposy=100\nheight=100\nwidth=300\ncolor=80,80,80\ntext=\nbonjour\n\n\n\n\n\n\nThe domain \n[textbox1]\n contain the name of the textbox, surrounded by [ ].\n\nThe domain \nname\n contain the name of the textbox. The name will not be print on the window.\n\nThe domain \nposx\n and \nposy\n define the starting position of the textbox.\n\nThe domain \nheight\n and \nwight\n define the size if the textbox.\n\nThe domain \ncolor\n contain the color of the textbox.\n\nThe domain \ntext\n contain the initial string print in the textbox\n\nEach textbox must have is own setup.\n\nIf there is two different setup for the same textbox, the program will use only the first one.\n\nTo use the textbox, you just have to click on it.\n\nOnly the alphabetical character, the space and delete can be use in textbox.\n\nThe other character will have no effect.\n\n\n\n\n\n\nCheckbox setup\n\n\n\nEach checkbox must be define as below :\n\n\nExample :\n\n\n[checkbox1]\nname=\ncheckbox1\n\nposx=700\nposy=70\nheight=50\nwidth=50\nfct_to_call_check=\ncheck\n\nfct_to_call_not_check=\nnot_check\n\n\n\n\n\n\n\nThe domain \n[checkbox1]\n contain the name of the Checkbox, surrounded by [ ].\n\nThe domain \nname\n contain the name of the checkbox. The name will not be print on the window.\n\nThe domain \nposx\n and \nposy\n define the starting position of the checkbox.\n\nThe domain \nheight\n and \nwight\n define the size if the checkbox.\n\nThe domain \nfct_to_call_check\n contain the name of the function to call when the checkbox is check.\n\nThe domain \nfct_to_call_not_check\n contain the name of the function to call when the checkbox is uncheck.\n\n\n\nEach checkbox must have is own setup.\n\nIf there is two different setup for the same checkbox, the program will use only the first one.\n\n\n\n\n\n\npicbox setup\n\n\n\npicbox mean picture box.\n\nEach picbox but be define as below.\n\n\n\nExemple :\n\n\n[picbox1]\nname=\nemoji6.png\n\nposx=100\nposy=250\n\n\n\n\n\nThe domain \n[picbox1]\n contain the name of the picbox, surrounded by [ ].\n\nThe domain \nname\n contain the link of the picture.\n\nThe demain \nposx\n and \nposy\n contain the starting position of the pixture.\n\n\n\nEach picbox must have is own setup.\n\nIf there is two different setup for the same checkbox, the program will use only the first one.\n\nThe picture will be print from the starting position to the end.\n\nIf the end of the picture is out of the window, an arror will be print.\n\nName must contain the link to the picture, or the function will retrun an error.\n\nIf the pitecute not exist, or the link is false, the function will retrun an error.\n\n\n\n\n\n\nHelp\n\n\nTo try the librairie, u can use \nthis ini file\n\nIf you need a C program, u can use \nmine\n\n\n\n\nfunction in the library\n\n\nAll the function implement in the library are \nhere\n\n\nIf you are looking for a specific function, u can click on the following link :\n\n\n\n\n1. \ntekgui_load\n\n2. \ntekgui_display\n\n3. \ndisplay_window\n\n4. \ntekpixel\n\n5. \ntekfunction\n\n6. \ntektext\n\n7. \ntekgetpixel\n\n8. \ntekgui_stop\n\n9. \ntekgui_max_ram",
            "title": "Doc"
        },
        {
            "location": "/doc-en/#utilisation-de-la-librairie-tekgui",
            "text": "This manual is made for user who know how to use the following function :  bunny_set_key_response();\nbunny_set_loop_main_function();\nbunny_loop();",
            "title": "Utilisation de la librairie tekgui"
        },
        {
            "location": "/doc-en/#establishment-of-an-ini-file",
            "text": "The tekgui library need a ini file to work. \nThis is necessary to create a good one. \nSome part of the ini file are mandatory, some other are customizable. \nThe ini file must be set like the following example. \nIf not, some function of the library will return NULL and print an Error.  \nExample :  [info]\nname= window \nheight=800\nwidth=800\ncolor=200,200,200\nmax_ram=15  \nThe domain  [info]  is a mandatory field. \nThe domain  window  contain the name of the window made by the library. \nThe domain  height  and  width  contains the height and the width of the window. \nThe domain  color  contain the color of the window. \nThe domain  max_ram  contain the maximum of ram usable by the program. \nIf you see  Error: error in malloc  print on the terminal, it's probably because  max_ram  is too short. \nIf window, color, height or width is empty or miss, the function will return an error.",
            "title": "Establishment of an ini file"
        },
        {
            "location": "/doc-en/#initialization-of-the-ini-file",
            "text": "This part is used to load the ini informations and set the tekgui structure. \nExample :  [window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=2\nname_checkbox=checkbox1,checkbox2\nnbr_picbox=2\nname_picbox=picbox1,picbox2  \nThe domain  [window]  is a mandatory field. \nThe domain  nbr_button  is the number of button in the window. \nThe domain  name_button  contain the name of all buttons. The number of name and  nbr_button  must match. \nThe domain  nbr_textbox  is the number of textbox in the window. \nThe domain  name_textbox  contain the name of all textbox. The number of name and  nbr_text  must match. \nThe domain  nbr_checkbox  is the number of checkbox in the window. \nThe domain  name_checkbox  contain the name of all checkbox. The number if name and  nbr_checkbox  must match. \nThe domain  nbr_picbox  is the number of picbox in the window. \nThe domain  name_picbox  contain rhe name of all picbox. The number if name and  nbr_checkbox  must match.  WARNING  All the domain must be set. \nIf, for example, you don't want checkbox in you interface, you should do :  [window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=0\nname_checkbox=NULL\nnbr_picbox=2\nname_picbox=picbox1,picbox2",
            "title": "Initialization of the ini file"
        },
        {
            "location": "/doc-en/#button-setup",
            "text": "Each button must be define as below : \nExample :  [button1]\nname= salut \nposx=0\nposy=0\nheight=100\nwidth=100\ncolor=70,70,70\nselect_color=150,150,150\nfct_to_call= button1   \nThe domain  [button1]  contain the name of the name of the button to set, surrounded by [ ]. \nThe domain  name  contain the name of button in the window. \nThe domain  posx  and  posy  contains the starting position of the button. \nThe domain  height  and  wight  define the size of the button. \nThe domain  color  contain the color of the button. \nThe domain  select_color  is the color when the mousse is on the button. \nThe domain  fct_to_call  contain the name of the function to call when you clock on the button. \nEach button must have is own setup. \nIf there is two different setup for the same button, the program will use only the first one.",
            "title": "Button setup"
        },
        {
            "location": "/doc-en/#textbox-setup",
            "text": "Each textbox must be define as below : \nExample :  [textbox1]\nname= tekbox1 \nposx=300\nposy=100\nheight=100\nwidth=300\ncolor=80,80,80\ntext= bonjour   \nThe domain  [textbox1]  contain the name of the textbox, surrounded by [ ]. \nThe domain  name  contain the name of the textbox. The name will not be print on the window. \nThe domain  posx  and  posy  define the starting position of the textbox. \nThe domain  height  and  wight  define the size if the textbox. \nThe domain  color  contain the color of the textbox. \nThe domain  text  contain the initial string print in the textbox \nEach textbox must have is own setup. \nIf there is two different setup for the same textbox, the program will use only the first one. \nTo use the textbox, you just have to click on it. \nOnly the alphabetical character, the space and delete can be use in textbox. \nThe other character will have no effect.",
            "title": "Textbox setup"
        },
        {
            "location": "/doc-en/#checkbox-setup",
            "text": "Each checkbox must be define as below : \nExample :  [checkbox1]\nname= checkbox1 \nposx=700\nposy=70\nheight=50\nwidth=50\nfct_to_call_check= check \nfct_to_call_not_check= not_check   \nThe domain  [checkbox1]  contain the name of the Checkbox, surrounded by [ ]. \nThe domain  name  contain the name of the checkbox. The name will not be print on the window. \nThe domain  posx  and  posy  define the starting position of the checkbox. \nThe domain  height  and  wight  define the size if the checkbox. \nThe domain  fct_to_call_check  contain the name of the function to call when the checkbox is check. \nThe domain  fct_to_call_not_check  contain the name of the function to call when the checkbox is uncheck.  \nEach checkbox must have is own setup. \nIf there is two different setup for the same checkbox, the program will use only the first one.",
            "title": "Checkbox setup"
        },
        {
            "location": "/doc-en/#picbox-setup",
            "text": "picbox mean picture box. \nEach picbox but be define as below.  \nExemple :  [picbox1]\nname= emoji6.png \nposx=100\nposy=250  \nThe domain  [picbox1]  contain the name of the picbox, surrounded by [ ]. \nThe domain  name  contain the link of the picture. \nThe demain  posx  and  posy  contain the starting position of the pixture.  \nEach picbox must have is own setup. \nIf there is two different setup for the same checkbox, the program will use only the first one. \nThe picture will be print from the starting position to the end. \nIf the end of the picture is out of the window, an arror will be print. \nName must contain the link to the picture, or the function will retrun an error. \nIf the pitecute not exist, or the link is false, the function will retrun an error.",
            "title": "picbox setup"
        },
        {
            "location": "/doc-en/#help",
            "text": "To try the librairie, u can use  this ini file \nIf you need a C program, u can use  mine",
            "title": "Help"
        },
        {
            "location": "/doc-en/#function-in-the-library",
            "text": "All the function implement in the library are  here  If you are looking for a specific function, u can click on the following link :  \n1.  tekgui_load \n2.  tekgui_display \n3.  display_window \n4.  tekpixel \n5.  tekfunction \n6.  tektext \n7.  tekgetpixel \n8.  tekgui_stop \n9.  tekgui_max_ram",
            "title": "function in the library"
        },
        {
            "location": "/function-en/",
            "text": "Function in the library\n\n\n\n\ntekpixel\n\n\n\nThe function tekpixel change the color of one pixel.\n\nThe function is define as below:\n\n\nvoid      tekpixel(t_bunny_pixelarray *pix, t_bunny_position *pos, t_color *color);\n\n\n\n\nThe function tekpixel can change the color only if the pixel is on the pixelarray.\n\nIf not, it will do nothing.\n\n\n\n\n\n\ntekgui_load\n\n\n\nThe tekgui_load function load all information from the ini file and complete the structure.\n\nYou must calll this function first to be able to use all other.\n\ntekgui_load is define as below:\n\n\nt_tekgui     tekgui_load(const char *filename);\n\n\n\n\n\nIf an error is found, the function will return NULL and print an error.\n\n\n\n\ntekgui_display\n\n\n\nThe function tekgui_display write all the information from the structure to the pixelarray.\n\n\nWarning\n : tekgui_display will not display the pixelarray, she will just complete it\n\nIf you want to display the window, you must call the fonction \ndisplay_window\n\ntekgui_display is define as below:\n\n\nvoid       tekgui_display(t_bunny_pixelarray *pix, t_tekgui *tekgui);\n\n\n\n\n\nTo do something more simply,  u can use the function like the example below\n\n\ntekgui_display(tekgui-\npix, tekgui);\n\n\n\n\n\n\ndisplay_window\n\n\n\nThe function display_window print the window.\n\n\nvoid      display_window(t_tekgui *tekgui);\n\n\n\n\nThis function print the pixelarray, but can not set it.\nTo set the pixelarray, you must use \ntekgui_display\n\n\n\n\ntekfunction\n\n\n\ntekfunction take in parameter the name of a function and return the adresse of this function.\n\ntekfunction is define as below\n\n\nvoid      *tekfunction(const char *functname);\n\n\n\n\n\n\nIf the function does not exist or an error append, tekfunction will return NULL.\n\n\n\n\ntektext\n\n\n\nThis function print a string.\n\ntektext take in parameter two pixelarray and a string to print.\n\ntektext is define as below :\n\n\nvoid tektext(t_bunny_pixelarray *out, const char *str, t_bunny_pixelarray *font_png);\n\n\n\n\n\n\ntekgetpixel\n\n\n\n\nThe function tekgetpixel take a pixelarray and a position of a pixel and return his color.\n\ntekgetpixel is define as below :\n\n\nt_color     tekgetpixel(t_bunny_pixelarray *, t_bunny_position *);\n\n\n\n\n\n\ntekgui_stop\n\n\n\nThe function tekgui_stop free the memory.\n\nThe function must be called at the end of the program.\n\nThe function is define ad below :\n\n\nvoid      tekgui_stop(t_tekgui *);\n\n\n\n\n\n\ntekgui_max_ram\n\n\n\nThe function tekgui_max_ram take in parameter the ini file, and set the maximum ram as definie in the ini.\n\ntekgui_max_ram is definie as below :\n\n\nvoid    tekgui_max_ram(const char *name);\n\n\n\n\nU must call the function before \ntekgui_load",
            "title": "Function"
        },
        {
            "location": "/function-en/#function-in-the-library",
            "text": "",
            "title": "Function in the library"
        },
        {
            "location": "/function-en/#tekpixel",
            "text": "The function tekpixel change the color of one pixel. \nThe function is define as below:  void      tekpixel(t_bunny_pixelarray *pix, t_bunny_position *pos, t_color *color);  The function tekpixel can change the color only if the pixel is on the pixelarray. \nIf not, it will do nothing.",
            "title": "tekpixel"
        },
        {
            "location": "/function-en/#tekgui_load",
            "text": "The tekgui_load function load all information from the ini file and complete the structure. \nYou must calll this function first to be able to use all other. \ntekgui_load is define as below:  t_tekgui     tekgui_load(const char *filename);  \nIf an error is found, the function will return NULL and print an error.",
            "title": "tekgui_load"
        },
        {
            "location": "/function-en/#tekgui_display",
            "text": "The function tekgui_display write all the information from the structure to the pixelarray.  Warning  : tekgui_display will not display the pixelarray, she will just complete it \nIf you want to display the window, you must call the fonction  display_window \ntekgui_display is define as below:  void       tekgui_display(t_bunny_pixelarray *pix, t_tekgui *tekgui);  \nTo do something more simply,  u can use the function like the example below  tekgui_display(tekgui- pix, tekgui);",
            "title": "tekgui_display"
        },
        {
            "location": "/function-en/#display_window",
            "text": "The function display_window print the window.  void      display_window(t_tekgui *tekgui);  This function print the pixelarray, but can not set it.\nTo set the pixelarray, you must use  tekgui_display",
            "title": "display_window"
        },
        {
            "location": "/function-en/#tekfunction",
            "text": "tekfunction take in parameter the name of a function and return the adresse of this function. \ntekfunction is define as below  void      *tekfunction(const char *functname);   If the function does not exist or an error append, tekfunction will return NULL.",
            "title": "tekfunction"
        },
        {
            "location": "/function-en/#tektext",
            "text": "This function print a string. \ntektext take in parameter two pixelarray and a string to print. \ntektext is define as below :  void tektext(t_bunny_pixelarray *out, const char *str, t_bunny_pixelarray *font_png);",
            "title": "tektext"
        },
        {
            "location": "/function-en/#tekgetpixel",
            "text": "The function tekgetpixel take a pixelarray and a position of a pixel and return his color. \ntekgetpixel is define as below :  t_color     tekgetpixel(t_bunny_pixelarray *, t_bunny_position *);",
            "title": "tekgetpixel"
        },
        {
            "location": "/function-en/#tekgui_stop",
            "text": "The function tekgui_stop free the memory. \nThe function must be called at the end of the program. \nThe function is define ad below :  void      tekgui_stop(t_tekgui *);",
            "title": "tekgui_stop"
        },
        {
            "location": "/function-en/#tekgui_max_ram",
            "text": "The function tekgui_max_ram take in parameter the ini file, and set the maximum ram as definie in the ini. \ntekgui_max_ram is definie as below :  void    tekgui_max_ram(const char *name);  U must call the function before  tekgui_load",
            "title": "tekgui_max_ram"
        },
        {
            "location": "/exemple-ini/",
            "text": "This is an example of a fonctional ini file.\n\n\nYou can copy it and try to change some value to try the library.\n\n\n[info]\nname=\nbonjour\n\nheight=800\nwidth=800\ncolor=200,200,200\nmax_ram=15\n\n[window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=2\nname_checkbox=checkbox1,checkbox2\nnbr_picbox=2\nname_picbox=picbox1,picbox2\n\n[button1]\nname=\nbutton1\n\nposx=0\nposy=50\nheight=100\nwidth=100\ncolor=70,70,70\nselect_color=150,150,150\nfct_to_call=\nbutton1\n\n\n[button2]\nname=\nbutton_2_name\n\nposx=300\nposy=300\nheight=50\nwidth=200\ncolor=255,255,255\nselect_color=150,150,150\nfct_to_call=\nbutton2\n\n\n[button3]\nname=\nbutton_3_name\n\nposx=0\nposy=700\nheight=900\nwidth=900\ncolor=80,130,240\nselect_color=170,0,170\nfct_to_call=\nbutton3\n\n\n[textbox1]\nname=\nbonjour\n\nposx=300\nposy=100\nheight=100\nwidth=300\ncolor=80,80,80\ntext=\ntektext2\n\n\n[textbox2]\nname=\ntekbox2\n\nposx=500\nposy=500\nheight=100\nwidth=200\ncolor=80,80,80\ntext=\nbonjour2\n\n\n[checkbox1]\nname=\ncheckbox1\n\nposx=700\nposy=70\nheight=50\nwidth=50\nfct_to_call_check=\ncheck\n\nfct_to_call_not_check=\nnot_check\n\n\n[checkbox2]\nname=\ncheckbox1\n\nposx=70\nposy=500\nheight=100\nwidth=100\nfct_to_call_check=\ncheck\n\nfct_to_call_not_check=\nnot_check\n\n\n[picbox1]\nname=\nsource/emoji6.png\n\nposx=100\nposy=250\n\n[picbox2]\nname=\nsource/piece.png\n\nposx=650\nposy=320",
            "title": "Ini file"
        },
        {
            "location": "/exemple-ini/#this-is-an-example-of-a-fonctional-ini-file",
            "text": "",
            "title": "This is an example of a fonctional ini file."
        },
        {
            "location": "/exemple-ini/#you-can-copy-it-and-try-to-change-some-value-to-try-the-library",
            "text": "[info]\nname= bonjour \nheight=800\nwidth=800\ncolor=200,200,200\nmax_ram=15\n\n[window]\nnbr_button=3\nname_button=button1,button2,button3\nnbr_textbox=2\nname_textbox=textbox1,textbox2\nnbr_checkbox=2\nname_checkbox=checkbox1,checkbox2\nnbr_picbox=2\nname_picbox=picbox1,picbox2\n\n[button1]\nname= button1 \nposx=0\nposy=50\nheight=100\nwidth=100\ncolor=70,70,70\nselect_color=150,150,150\nfct_to_call= button1 \n\n[button2]\nname= button_2_name \nposx=300\nposy=300\nheight=50\nwidth=200\ncolor=255,255,255\nselect_color=150,150,150\nfct_to_call= button2 \n\n[button3]\nname= button_3_name \nposx=0\nposy=700\nheight=900\nwidth=900\ncolor=80,130,240\nselect_color=170,0,170\nfct_to_call= button3 \n\n[textbox1]\nname= bonjour \nposx=300\nposy=100\nheight=100\nwidth=300\ncolor=80,80,80\ntext= tektext2 \n\n[textbox2]\nname= tekbox2 \nposx=500\nposy=500\nheight=100\nwidth=200\ncolor=80,80,80\ntext= bonjour2 \n\n[checkbox1]\nname= checkbox1 \nposx=700\nposy=70\nheight=50\nwidth=50\nfct_to_call_check= check \nfct_to_call_not_check= not_check \n\n[checkbox2]\nname= checkbox1 \nposx=70\nposy=500\nheight=100\nwidth=100\nfct_to_call_check= check \nfct_to_call_not_check= not_check \n\n[picbox1]\nname= source/emoji6.png \nposx=100\nposy=250\n\n[picbox2]\nname= source/piece.png \nposx=650\nposy=320",
            "title": "You can copy it and try to change some value to try the library."
        },
        {
            "location": "/basic-c-program/",
            "text": "This is an example of a C program.\n\n\nYou can copy it and try to change some value to try the library.\n\n\nI exptect you understand all liblapin function\n\n\n\n\nt_bunny_response    onclic(t_bunny_event_state state,\n                           t_bunny_mousebutton button,\n                           void *my_data)\n{\n  t_tekgui *tekgui;\n\n  tekgui = my_data;\n  if (button == BMB_LEFT \n state == GO_DOWN)\n    {\n      tekgui-\npos_on_click[0].x = tekgui-\npos_mousse[0].x;\n      tekgui-\npos_on_click[0].y = tekgui-\npos_mousse[0].y;\n      tekgui-\nclick = 1;\n    }\n  return (GO_ON);\n}\n\nt_bunny_response    key(t_bunny_event_state state,\n                        t_bunny_keysym keysym,\n                        void *my_data)\n{\n  t_tekgui      *tekgui;\n\n  tekgui = my_data;\n  (void) tekgui;\n  if (keysym == BKS_ESCAPE \n state == GO_DOWN)\n    return (EXIT_ON_SUCCESS);\n  if (state == GO_DOWN)\n    tekgui-\nlast_key = keysym;\n  return (GO_ON);\n}\n\nt_bunny_response    fonction_loop(void  *my_data)\n{\n  t_tekgui  *tekgui;\n  ptrfct    yolo;\n\n  (void)yolo;\n  tekgui = my_data;\n  tekgui_display(tekgui-\npix, tekgui);\n  aff_window(tekgui);\n  return (GO_ON);\n}\n\nint main()\n{\n  t_tekgui  *tekgui;\n\n  tekgui_max_ram(\nexemple.ini\n);\n  tekgui = tekgui_load(\nexemple.ini\n);\n  if (tekgui == NULL)\n    return (-1);\n  bunny_set_key_response(key);\n  bunny_set_click_response(onclic);\n  bunny_set_loop_main_function(\nfonction_loop);\n  bunny_loop(tekgui-\nwin, 60, tekgui);\n  tekgui_stop(tekgui);\n  return (0);\n}",
            "title": "Demo program"
        },
        {
            "location": "/basic-c-program/#this-is-an-example-of-a-c-program",
            "text": "",
            "title": "This is an example of a C program."
        },
        {
            "location": "/basic-c-program/#you-can-copy-it-and-try-to-change-some-value-to-try-the-library",
            "text": "",
            "title": "You can copy it and try to change some value to try the library."
        },
        {
            "location": "/basic-c-program/#i-exptect-you-understand-all-liblapin-function",
            "text": "t_bunny_response    onclic(t_bunny_event_state state,\n                           t_bunny_mousebutton button,\n                           void *my_data)\n{\n  t_tekgui *tekgui;\n\n  tekgui = my_data;\n  if (button == BMB_LEFT   state == GO_DOWN)\n    {\n      tekgui- pos_on_click[0].x = tekgui- pos_mousse[0].x;\n      tekgui- pos_on_click[0].y = tekgui- pos_mousse[0].y;\n      tekgui- click = 1;\n    }\n  return (GO_ON);\n}\n\nt_bunny_response    key(t_bunny_event_state state,\n                        t_bunny_keysym keysym,\n                        void *my_data)\n{\n  t_tekgui      *tekgui;\n\n  tekgui = my_data;\n  (void) tekgui;\n  if (keysym == BKS_ESCAPE   state == GO_DOWN)\n    return (EXIT_ON_SUCCESS);\n  if (state == GO_DOWN)\n    tekgui- last_key = keysym;\n  return (GO_ON);\n}\n\nt_bunny_response    fonction_loop(void  *my_data)\n{\n  t_tekgui  *tekgui;\n  ptrfct    yolo;\n\n  (void)yolo;\n  tekgui = my_data;\n  tekgui_display(tekgui- pix, tekgui);\n  aff_window(tekgui);\n  return (GO_ON);\n}\n\nint main()\n{\n  t_tekgui  *tekgui;\n\n  tekgui_max_ram( exemple.ini );\n  tekgui = tekgui_load( exemple.ini );\n  if (tekgui == NULL)\n    return (-1);\n  bunny_set_key_response(key);\n  bunny_set_click_response(onclic);\n  bunny_set_loop_main_function( fonction_loop);\n  bunny_loop(tekgui- win, 60, tekgui);\n  tekgui_stop(tekgui);\n  return (0);\n}",
            "title": "I exptect you understand all liblapin function"
        }
    ]
}